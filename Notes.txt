-- By default all the components are server components

-- there are two types of components
    1. Server components
        - in server components we can't use react hooks.
    2. Client components
        - to make client component we just add to top "use client"
        - we can use all the react hooks in client components

-- page.js is the root file for every route

-- routes
    - to create routes, simply create one folder inside "app"
    - after creating folder, create one file called "page.js", it will be your root level file.

-- nested routes
    - to create nested routes, simply create one folder inside any routes.
    - after creating folder, create one file called "page.js".

-- but when we have 100 of nested routes then it will be very tough , to solve this we have concepts like "catch" or "routes"

-- learn about Dynamic routes   
    - dynamic routes is a route which is comming dynamically.
    - to create dynamic routes, create folder like "[]"

-- catch 
    - when we have multiple "slugs" then it will be used.
    - let's understand
        we have this slugs --> /12/jas/1111
        for this we have to create folder inside folder but to not do like this we will use catch concepts
    -- it is like : [...anyname]


-- go to one page to another page.
    - to do this functionality, we can do like this
        <Link href={'/account'} >Go to Account page</Link>

    second way of doing same thing
        - first make that component client component 
        - we will use useRouter to do this things


-- usePathName()  : this hook is used to get the info about path 
    ex.    URL : localhost:3000/cart 
        return : /cart

-- searchParams() 
-- {params}
-- {searchParams}



-- loading.js
    -> this is the loading file.
    ->


-- not-fount.js 
    - this is a custom "page not found" page.

// Data Feching

->  Fetch data in "server component"
    - in "server component" we just call the function and get the data.

->  Fetch data in "client component"